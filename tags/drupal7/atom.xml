<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>光鹿跑冰 - drupal7</title>
    <subtitle>子十个人博客</subtitle>
    <link href="https://aqrun.com/tags/drupal7/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://aqrun.com"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2016-06-22T15:33:10+00:00</updated>
    <id>https://aqrun.com/tags/drupal7/atom.xml</id>
    <entry xml:lang="en">
        <title>Drupal 7 在 nginx服务器 子目录及虚拟机访问时配置伪静态</title>
        <published>2016-06-22T15:33:10+00:00</published>
        <updated>2016-06-22T15:33:10+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://aqrun.com/backend/drupal-7-zai-nginxfu-wu-qi-zi-mu-lu-ji-xu-ni-ji-fang-wen-shi-pei-zhi-wei-jing-tai/" type="text/html"/>
        <id>https://aqrun.com/backend/drupal-7-zai-nginxfu-wu-qi-zi-mu-lu-ji-xu-ni-ji-fang-wen-shi-pei-zhi-wei-jing-tai/</id>
        
        <content type="html">&lt;h2 id=&quot;wen-jian-mu-lu-jie-gou&quot;&gt;文件目录结构：&lt;&#x2F;h2&gt;
&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;&#x2F;nginx
&#x2F;nginx&#x2F;conf
&#x2F;nginx&#x2F;conf&#x2F;nginx.conf         #默认nginx配置文件
&#x2F;nginx&#x2F;conf&#x2F;vhost
&#x2F;nginx&#x2F;conf&#x2F;vhost&#x2F;localhost.conf    #
&#x2F;nginx&#x2F;conf&#x2F;vhost&#x2F;*.conf       #各虚拟主机配置文件
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;以下列出三个主要配置文件内容：&lt;&#x2F;p&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-nginx&quot;&gt;
    #＝＝＝＝＝＝＝＝＝＝＝＝＝
    #默认配置文件
    #nginx.conf
    #user  nobody;
    worker_processes  1;
    #error_log  logs&#x2F;error.log;
    #error_log  logs&#x2F;error.log  notice;
    #error_log  logs&#x2F;error.log  info;
    #pid        logs&#x2F;nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       mime.types;
        default_type  application&#x2F;octet-stream;
        autoindex        on;
        sendfile        on;
        keepalive_timeout  65;
        include tools-*.conf;  #引入各种配置文件
        include vhost&#x2F;*.conf; 
    }
    #==============================

    #========================
    #默认访问控制
    #localhost.conf
    server {
        listen 80; # IPv4
        server_name localhost;
        ## Parameterization using hostname of access and log filenames.
        access_log logs&#x2F;localhost_access.log;
        error_log logs&#x2F;localhost_error.log;
        ## Root and index files.
        root D:&#x2F;xampp&#x2F;htdocs;
        index  index.php index.html index.htm;
        ## If no favicon exists return a 204 (no content error).
        location = &#x2F;favicon.ico {
            try_files $uri =204;
            log_not_found off;
            access_log off;
        }
        ## Don&#x27;t log robots.txt requests.
        location = &#x2F;robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }
        ## Try the requested URI as files before handling it to PHP.
            location &#x2F; {
        
            } # &#x2F; location

            ## Regular PHP processing.
            location ~ \.php$ {
                try_files  $uri =404;
                fastcgi_pass   127.0.0.1:9000;
                fastcgi_index  index.php;
                fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
                include        fastcgi_params;
            }

            ## Static files
            location ~* \.(?:css|gif|htc|ico|js|jpe?g|png|swf)$ {
                expires max;
                log_not_found off;
                ## No need to bleed constant updates. Send the all shebang in one
                ## fell swoop.
                tcp_nodelay off;
                ## Set the OS file cache.
                open_file_cache max=1000 inactive=120s;
                open_file_cache_valid 45s;
                open_file_cache_min_uses 2;
                open_file_cache_errors off;
            }

            ## Keep a tab on the &#x27;big&#x27; static files.
            location ~* ^.+\.(?:ogg|pdf|pptx?)$ {
                expires 30d;
                ## No need to bleed constant updates. Send the all shebang in one
                ## fell swoop.
                tcp_nodelay off;
            }
            #子目录访问 rewrite方式   
            #   http:&#x2F;&#x2F;localhost&#x2F;drupal&#x2F;user         会rewrite到       http:&#x2F;&#x2F;localhost&#x2F;drupal&#x2F;index.php?q=user
            location &#x2F;drupal{
                    #使用“-f”和“!-f”运算符检查文件是否存在
                    #使用“-d”和“!-d”运算符检查目录是否存在
                if (!-f $request_filename) {
                    rewrite  ^&#x2F;drupal&#x2F;(.*)$  &#x2F;drupal&#x2F;index.php?q=$1  last;
                    break;
                }
                if (!-d $request_filename) {
                    rewrite  ^&#x2F;drupal&#x2F;(.*)$  &#x2F;drupal&#x2F;index.php?q=$1  last;
                    break;
                }
            }
    } # end http server
    #==================================


    #===================================
    #  www.drupal.my    虚拟跟径指向  localhost&#x2F;drupal
    #www.drupal.my.conf
    server {
        listen   80; ## listen for ipv4; this line is default and implied

        root D:&#x2F;xampp&#x2F;htdocs&#x2F;drupal;
        index index.html index.php;

        server_name www.drupal.my;
        location &#x2F; {
                index  index.php index.html;
                #rewrite
                # 使用“-e”和“!-e”运算符检查文件、目录或符号链接是否存在；
                if (!-e $request_filename) {
                    rewrite ^&#x2F;(.*)$ &#x2F;index.php?q=$1 last;
                }
            }
        
        error_page 404 &#x2F;404.php;

        location ~ \.php$ {
            try_files  $uri =404;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
        #rewrite rules
        #include vhost&#x2F;www.drupal.my.rules;

    
    }
&lt;&#x2F;code&gt;
&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>image_style_url 生成指定缩略图url</title>
        <published>2014-11-16T00:00:00+00:00</published>
        <updated>2014-11-16T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://aqrun.com/backend/image-style-url-sheng-cheng-zhi-ding-suo-lue-tu-url/" type="text/html"/>
        <id>https://aqrun.com/backend/image-style-url-sheng-cheng-zhi-ding-suo-lue-tu-url/</id>
        
        <content type="html">&lt;p&gt;modules&#x2F;image&#x2F;image.module&lt;&#x2F;p&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-php&quot;&gt;

    function image_style_url($style_name, $path) {...}

    &#x2F;&#x2F;example:
    $imgItem = field_get_items(&#x27;node&#x27;, $node, &#x27;field_image&#x27;);
    $imgUrl = image_style_url(&quot;com_introduce&quot;, $imgItem[0][&#x27;uri&#x27;]);

&lt;&#x2F;code&gt;
&lt;&#x2F;pre&gt;</content>
        
    </entry>
    <entry xml:lang="en">
        <title>drupal7 EntityFieldQuery获取指定类型的内容列表</title>
        <published>2014-11-10T00:00:00+00:00</published>
        <updated>2014-11-10T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://aqrun.com/backend/drupal7-entityfieldqueryhuo-qu-zhi-ding-lei-xing-de-nei-rong-lie-biao/" type="text/html"/>
        <id>https://aqrun.com/backend/drupal7-entityfieldqueryhuo-qu-zhi-ding-lei-xing-de-nei-rong-lie-biao/</id>
        
        <content type="html">&lt;p&gt;EntityFieldQuery获取指定类型的内容列表&lt;&#x2F;p&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-php&quot;&gt;

&#x2F;&#x2F;先获取指定类型内容nid列表
$query = new EntityFieldQuery();
$entities = $query-&gt;entityCondition(&#x27;entity_type&#x27;, &#x27;node&#x27;)
      -&gt; propertyCondition(&#x27;type&#x27;, &#x27;your node type&#x27;);
$total = $entities-&gt;count()-&gt;execute(); &#x2F;&#x2F;获取数据总条数
$entities-&gt;count() = false;  &#x2F;&#x2F;设置计数为false
$nodes = $entities-&gt;range(1,1)-&gt;count(false)-&gt;execute(); &#x2F;&#x2F;获取指定类型node数据

foreach($nodes[&#x27;node&#x27;] as $k=$v){
    $nids[] = $v[&#x27;nid&#x27;];
}
$nodesData = node_load_multiple($nids);  &#x2F;&#x2F;获取指定nid内容对象列表
foeach($nodesData as $n){
   &#x2F;&#x2F;处理相关数据
}

&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;EntityFieldQuery 类在 entity.inc文件&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Drupal 7 API 之db_select的一些使用</title>
        <published>2014-11-05T10:30:22+00:00</published>
        <updated>2014-11-05T10:30:22+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://aqrun.com/backend/drupal-7-api-zhi-db-selectde-yi-xie-shi-yong/" type="text/html"/>
        <id>https://aqrun.com/backend/drupal-7-api-zhi-db-selectde-yi-xie-shi-yong/</id>
        
        <content type="html">&lt;p&gt;Drupal 7 数据库API增加了db_select()方法，和db_query()相比，语法更加清晰，使用也更加方便。目的也不言而喻，就是取代db_query()。下面我也就列罗出一些经常使用的技巧，可能不够全面，还请大家多多补充。&lt;&#x2F;p&gt;
&lt;h4 id=&quot;1-dan-biao-cha-xun-zui-ji-ben-shi-yong-fang-fa&quot;&gt;1. 单表查询（最基本使用方法）&lt;&#x2F;h4&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-php&quot;&gt;
$result = db_select(&#x27;contact&#x27;, &#x27;c&#x27;)  &#x2F;&#x2F;选择表contact,名一个别名c
 -&gt;fields(&#x27;c&#x27;) &#x2F;&#x2F;查询c表中的字段，后面不跟参数就是查询所有
 -&gt;execute()  &#x2F;&#x2F;执行操作
 -&gt;fetchAssoc(); &#x2F;&#x2F;处理结果集
&lt;&#x2F;code&gt;
&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;2-tiao-jian-cha-xun-condition&quot;&gt;2. 条件查询（condition）&lt;&#x2F;h4&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-php&quot;&gt;
    $result = db_select(&#x27;node&#x27;, &#x27;n&#x27;)
    -&gt;fields(&#x27;n&#x27;)
    -&gt;condition(&#x27;nid&#x27;, 5,&#x27;=&#x27;)  &#x2F;&#x2F;nid等于5的条件
    -&gt;condition(&#x27;status&#x27;, 0,&#x27;&gt;&#x27;) &#x2F;&#x2F; 状态大于0,也就是为真等于1
    -&gt;condition(&#x27;uid&#x27;, array(1,5,7),&#x27;IN&#x27;) &#x2F;&#x2F;使用IN操作，当然还可以使用 NOT IN
    -&gt;execute()
    -&gt;fetchAssoc();
&lt;&#x2F;code&gt;
&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;3-lian-he-cha-xun-join&quot;&gt;3. 联合查询（Join）&lt;&#x2F;h4&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-php&quot;&gt;
 $query = db_select(&#x27;field_data_field_slide&#x27;,&#x27;f&#x27;); &#x2F;&#x2F;主表

 $query-&gt;join(&#x27;node&#x27;, &#x27;n&#x27;, &#x27;fa.entity_id = n.nid&#x27;); &#x2F;&#x2F; 联合node表,条件是nid

 $query-&gt;condition(&#x27;f.field_slide_channel_tid&#x27;,$chanid,&#x27;=&#x27;);

 $query-&gt;condition(&#x27;n.status&#x27;,&#x27;1&#x27;,&#x27;=&#x27;);  &#x2F;&#x2F;发布状态

 $query-&gt;fields(&#x27;n&#x27;,array(&#x27;nid&#x27;));  &#x2F;&#x2F;查询nid

 $query-&gt;orderBy(&#x27;n.nid&#x27;,&#x27;DESC&#x27;); &#x2F;&#x2F;排序条件

  $query-&gt;range(0,4); &#x2F;&#x2F;取得4条数据

   $result = $query-&gt;execute();
&lt;&#x2F;code&gt;
&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;4-tian-jia-zi-duan-addfield&quot;&gt;4. 添加字段（addField）&lt;&#x2F;h4&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-php&quot;&gt;
    $query = db_select(&#x27;taxonomy_term_hierarchy&#x27;,&#x27;h&#x27;); &#x2F;&#x2F;选择表
    $query-&gt;join(&#x27;taxonomy_term_data&#x27;,&#x27;d&#x27;,&#x27;h.tid = d.tid&#x27;); &#x2F;&#x2F; 联合查询
    $query-&gt;addField(&#x27;d&#x27;, &#x27;tid&#x27;); &#x2F;&#x2F; 添加字段
    $query-&gt;condition(&#x27;h.parent&#x27;,0); &#x2F;&#x2F; 添加条件where 
    $query-&gt;condition(&#x27;d.vid&#x27;,$vid); &#x2F;&#x2F; 再添加一个条件 and ....
    $query-&gt;addTag(&#x27;ditusearch_generate_path&#x27;); &#x2F;&#x2F; 添加Tag 可选项，这个就是方便其他地方可以改变这   个查询$query 比如如果添加了tag 可以使用 hook_query_alter 对其进行查询 如果你使用过views开发，views 也可以了类似的hook
    $tid = $query-&gt;execute()-&gt;fetchCol();
&lt;&#x2F;code&gt;
&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;5-fen-ye-shi-yong-pager&quot;&gt;5. 分页使用（pager）&lt;&#x2F;h4&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-javascript&quot;&gt;
  $query = db_select(&#x27;node&#x27;, &#x27;n&#x27;)
      -&gt;condition(&#x27;type&#x27;, &#x27;article&#x27;)
      -&gt;fields(&#x27;n&#x27;);
  $query = $query-&gt;extend(&#x27;PagerDefault&#x27;)-&gt;limit(2); &#x2F;&#x2F;limit条件是分页数目
  $result = $query-&gt;execute();
  foreach($result as $res){
     $output .= $res-&gt;title;
   }
    $output .= theme(‘pager’); &#x2F;&#x2F;添加分页theme
    Return $output; 
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;6-duo-biao-lian-he-fen-ye&quot;&gt;6. 多表联合分页&lt;&#x2F;h4&gt;
&lt;pre class=&quot;line-numbers&quot;&gt;
    &lt;code class=&quot;language-javascript&quot;&gt;
  $query = db_select(&#x27;field_data_field_news&#x27;,&#x27;fa&#x27;)-&gt;extend(&#x27;PagerDefault&#x27;); &#x2F;&#x2F;多表联合查询extend条件必须放在db_select之后

  $query-&gt;join(&#x27;node&#x27;,&#x27;n&#x27;,&#x27;fa.entity_id = n.nid&#x27;);

  $query-&gt;join(&#x27;field_data_field_news_date_sort&#x27;, &#x27;fb&#x27;, &#x27;fa.entity_id = fb.entity_id&#x27;);

  $query-&gt;fields(&#x27;n&#x27;, array(&#x27;nid&#x27;,&#x27;title&#x27;));

  $query-&gt;condition(&#x27;fa.field_news_classify_tid&#x27;,$tids,&#x27;in&#x27;); 

  $query-&gt;condition(&#x27;n.type&#x27;,&#x27;news&#x27;,&#x27;=&#x27;); 

  $query-&gt;condition(&#x27;n.status&#x27;,&#x27;1&#x27;,&#x27;=&#x27;);     

 $query-&gt;orderBy(&#x27;fb.field_news_date_sort_value&#x27;,&#x27;DESC&#x27;);

  $query-&gt;limit(14);

   $result = $query-&gt;execute();
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;http:&#x2F;&#x2F;drupalchina.cn&#x2F;node&#x2F;2026  &lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
